package be.ipl.pae.main.dao;

import be.ipl.pae.main.biz.EtatAmenagements;
import be.ipl.pae.main.biz.dto.DevisDto;
import be.ipl.pae.main.biz.factory.BizFactory;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.HashMap;

import config.Inject;

public class DevisDaoImpl implements DevisDao {

  @Inject
  private DalServices dalS;
  @Inject
  private BizFactory bizFactory;
  private ArrayList<DevisDto> listeDevis;


  /**
   * Constructeur de devisDaoImpl.
   */
  public DevisDaoImpl() {
    this.listeDevis = new ArrayList<DevisDto>();
  }

  private DevisDto setDevisDTO(int idDevis, int idClient, Timestamp dateDevis, double montantTotal,
      int dureeTravaux, EtatAmenagements etat, Timestamp dateDebutTravaux, boolean visibilite) {
    DevisDto devisDto = bizFactory.getDevis();
    devisDto.setId_devis(idDevis);
    devisDto.setId_client(idClient);
    devisDto.setDate_devis(dateDevis);
    devisDto.setMontant_total(montantTotal);
    devisDto.setDuree_travaux(dureeTravaux);
    devisDto.setEtat(etat);
    devisDto.setDate_debut_travaux(dateDebutTravaux);
    devisDto.setVisibilite_amenagement(visibilite);
    return devisDto.clone();
  }

  // on recupere tout les devis d un client pour les ajouter dans une arraylist
  @Override
  public ArrayList<DevisDto> getDevis(int idClient) {
    listeDevis = new ArrayList<DevisDto>();
    PreparedStatement ps = dalS.getPreparedStatement(QueryNamesEnum.GET_DEVIS_CLIENT);
    try {
      ps.setInt(1, idClient);
      try (ResultSet res = ps.executeQuery()) {
        while (res.next()) {

          listeDevis.add(setDevisDTO(res.getInt(1), res.getInt(2), res.getTimestamp(3),
              res.getDouble(4), res.getInt(5), EtatAmenagements.valueOf(res.getString(6)),
              res.getTimestamp(7), res.getBoolean(8)));
        }

      } catch (SQLException exception) {
        exception.printStackTrace();
      }
    } catch (SQLException exception) {
      exception.printStackTrace();
    }
    return listeDevis;
  }

  @Override
  public ArrayList<HashMap<String, String>> getDevisRealisation() {
    ArrayList<HashMap<String, String>> listeDevisRealisation =
        new ArrayList<HashMap<String, String>>();
    PreparedStatement ps = dalS.getPreparedStatement(QueryNamesEnum.GET_DEVIS_ADMIN);
    try {
      ResultSet res = ps.executeQuery();
      String prenom = "";
      String typeAmenagement = "";
      String dateDevis = "";
      String idDevis = "";
      String dureeTravaux = "";
      String montantTotal = "";
      String etatDesAmenagements = "";
      String nombrePhotosAvant = "";
      String nombrePhotosApres = "";
      String nombrePhotosVisible = "";
      String photoPrefere = "";
      String dateDebutTravaux = "";
      while (res.next()) {
        HashMap<String, String> devisRealisation = new HashMap<String, String>();
        /* On attribut les champs de la requete aux variables */
        prenom = res.getString(1);
        typeAmenagement = res.getString(2);
        dateDevis = res.getDate(3).toString();
        idDevis = String.valueOf(res.getInt(4));
        dureeTravaux = String.valueOf(res.getInt(5));
        montantTotal = String.valueOf(res.getDouble(6));
        etatDesAmenagements = res.getString(7);
        nombrePhotosAvant = String.valueOf(res.getInt(8));
        nombrePhotosApres = String.valueOf(res.getInt(9));
        nombrePhotosVisible = String.valueOf(res.getString(10));
        photoPrefere = res.getString(10);
        dateDebutTravaux = res.getString(11);
        /* ajout des strings des realisations dans la list */
        devisRealisation.put("prenom", prenom);
        devisRealisation.put("typeAmenagement", typeAmenagement);
        devisRealisation.put("dateDevis", dateDevis);
        devisRealisation.put("idDevis", idDevis);
        devisRealisation.put("dureeTravaux", dureeTravaux);
        devisRealisation.put("montantTotal", montantTotal);
        devisRealisation.put("etatDesAmenagements", etatDesAmenagements);
        devisRealisation.put("nombrePhotosAvant", nombrePhotosAvant);
        devisRealisation.put("nombrePhotosApres", nombrePhotosApres);
        devisRealisation.put("nombrePhotosVisible", nombrePhotosVisible);
        devisRealisation.put("photoPrefere", photoPrefere);
        devisRealisation.put("dateDebutTravaux", dateDebutTravaux);
        listeDevisRealisation.add(devisRealisation);
      }
      return listeDevisRealisation;
    } catch (SQLException exception) {
      exception.printStackTrace();
      exception.printStackTrace();
    }

    return null;
  }


  @Override
  public ArrayList<DevisDto> getDevis() {
    listeDevis = new ArrayList<DevisDto>();
    PreparedStatement ps = dalS.getPreparedStatement(QueryNamesEnum.GET_DEVIS);
    try {
      ResultSet res = ps.executeQuery();
      while (res.next()) {
        listeDevis.add(setDevisDTO(res.getInt(1), res.getInt(2), res.getTimestamp(3),
            res.getDouble(4), res.getInt(5), EtatAmenagements.valueOf(res.getString(6)),
            res.getTimestamp(7), res.getBoolean(8)));
      }

    } catch (SQLException exception) {
      exception.printStackTrace();
    }
    return listeDevis;

  }


  @Override
  public boolean deleteDevis(int idClient) {
    // TODO Auto-generated method stub
    return false;
  }


  @Override
  public boolean updateDevis(DevisDto utilisateur) {
    // TODO Auto-generated method stub
    return false;
  }



}
