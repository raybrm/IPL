package be.ipl.pae.main.api;

import java.io.IOException;
import javax.servlet.http.HttpServletResponse;
import com.auth0.jwt.JWT;
import com.auth0.jwt.JWTCreator.Builder;
import com.auth0.jwt.JWTVerifier;
import com.auth0.jwt.algorithms.Algorithm;
import com.auth0.jwt.exceptions.JWTVerificationException;
import com.auth0.jwt.interfaces.DecodedJWT;

public class Utils {

  private static final String JWTSECRET = "PROJETAE2019";
  private static final String EMETTEUR = "auth0";

  public static final Algorithm algorithm = Algorithm.HMAC256(JWTSECRET);

  /**
   * Cree le token
   * 
   * @return le builder du token
   */
  public static Builder createToken() {
    return JWT.create().withIssuer(EMETTEUR);
  }

  /**
   * Verifie le token donnee en parametre, Si le token founi n'est pas bon une
   * JWTVerificationException sera lancer
   * 
   * @param token Le token a verifier
   * @return Un Objet de type DecodedJWT
   */
  public static boolean verifyToken(String token) {
    try {
      JWTVerifier verifier = JWT.require(algorithm).withIssuer(EMETTEUR).build();
      DecodedJWT jwt = verifier.verify(token);
      return true;
    } catch (JWTVerificationException exception) {
      return false;
    }
  }

  public static void reply(HttpServletResponse resp, int errorCode, String respErrorMsg,
      String terminalErrorMsg) throws IOException {
    resp.setStatus(errorCode);
    resp.setCharacterEncoding("utf-8");
    resp.setContentType("application/json");
    String return_json = "{\"success\":\"false\", \"message\":\"" + respErrorMsg + "\"}";
    resp.getWriter().write(return_json);
    System.out.println(terminalErrorMsg);
  }

  public static void replyWithWrongTokenError(HttpServletResponse resp, String token)
      throws IOException {
    reply(resp, 403, "Wrong or non-provided token.",
        "Access denied to token : " + token);
  }


}
