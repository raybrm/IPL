package be.ipl.pae.main.ucc;

import be.ipl.pae.main.biz.dto.ClientDto;
import be.ipl.pae.main.biz.factory.BizFactory;
import be.ipl.pae.main.dao.ClientDao;
import be.ipl.pae.main.dao.DalServivesDbManager;
import be.ipl.pae.main.exception.FatalException;

import java.util.ArrayList;

import config.Inject;

public class ClientUccImpl implements ClientUcc {

  @Inject
  private ClientDao clientDao;
  @Inject
  private BizFactory bizFactory;
  @Inject
  private DalServivesDbManager dalServices;

  public ClientUccImpl() {}

  @Override
  public ArrayList<ClientDto> getClients() {
    ArrayList<ClientDto> listeClient;

    try {
      dalServices.startTransaction();
      listeClient = clientDao.getClients();
      if (listeClient == null) {
        System.out.println("pas de Client");
        return null;
      }
    } catch (FatalException exc) {
      dalServices.rollback();
      throw exc;
    } finally {
      dalServices.commit();
    }
    return listeClient;
  }

  @Override
  public ClientDto inscrire(ClientDto clientDto) {
    // TODO: Faire des checks ici avant d envoyer l objet au DAO
    ClientDto client;

    try {
      dalServices.startTransaction();
      if (clientDto.getBoite() == null || clientDto.getBoite().isEmpty())
        client = clientDao.inscrireWithoutBoite(clientDto);
      else
        client = clientDao.inscrire(clientDto);
    } catch (FatalException exc) {
      dalServices.rollback();
      throw exc; // Propage l exception au servlet
    } finally {
      try {
        dalServices.commit();
      } catch (FatalException exc) {
        throw exc;
      }
    }

    return client;
  }

  // Utlilise pour remplace le Dao par un Mock de Dao dans les test
  public void setDao(ClientDao cDao) {
    clientDao = cDao;
  }

}

