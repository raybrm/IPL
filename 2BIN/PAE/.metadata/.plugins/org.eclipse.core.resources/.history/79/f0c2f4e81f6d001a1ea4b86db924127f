package be.ipl.pae.main.dao;


import static utils.CheckUtils.checkObject;
import static utils.CheckUtils.checkString;

import be.ipl.pae.main.biz.TypeUtilisateurEnum;
import be.ipl.pae.main.biz.dto.UtilisateurDto;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;

public class UtilisateurDaoImpl implements UtilisateurDao {

  private DalService dalS;
  private UtilisateurDto utilisateur;

  /**
   * creer et recupere la connection et la factory.
   */
  public UtilisateurDaoImpl(UtilisateurDto utilisateur) throws SQLException {
    dalS = new DalService();
    this.utilisateur = utilisateur;
  }

  public UtilisateurDaoImpl() {}

  @Override
  public ArrayList<UtilisateurDto> getUtilisateurs() {

    ArrayList<UtilisateurDto> listeUtilisateurs = new ArrayList<UtilisateurDto>();
    PreparedStatement ps = dalS.getPreparedStatement(QueryNamesEnum.GET_UTILISATEURS);
    try {
      ResultSet res = ps.executeQuery();
      while (res.next()) {
        Timestamp date = res.getTimestamp(10);
        TypeUtilisateurEnum type = TypeUtilisateurEnum.valueOf(res.getString(8));
        utilisateur.setId_utilisateur(res.getInt(1));
        utilisateur.setNom(res.getString(2));
        utilisateur.setPrenom(res.getString(3));
        utilisateur.setVille(res.getString(4));
        utilisateur.setEmail(res.getString(5));
        utilisateur.setPseudo(res.getString(6));
        utilisateur.setMot_de_passe(res.getString(7));
        utilisateur.setType(type);
        utilisateur.setDate_inscription(date);
        utilisateur.setId_client(res.getInt(9));
        listeUtilisateurs.add(utilisateur.clone());

      }
      return listeUtilisateurs;

    } catch (SQLException exception) {
      exception.printStackTrace();
      System.out.println("Erreur dans getUtilisateur");
    }

    return null;
  }

  @Override
  public String getUtilisateurMotDePasse(String pseudo) {
    checkObject(pseudo);
    checkString(pseudo);

    PreparedStatement ps = dalS.getPreparedStatement(QueryNamesEnum.GET_MOT_DE_PASSE);
    try {
      ps.setString(1, pseudo);
      ResultSet res = ps.executeQuery();
      if (res.next()) {
        return res.getString(1);
      }
    } catch (SQLException exception) {
      exception.printStackTrace();
    }
    return null;
  }

  @Override
  public UtilisateurDto getUtilisateur(String pseudo) {
    checkObject(pseudo);
    checkString(pseudo);


    PreparedStatement ps = dalS.getPreparedStatement(QueryNamesEnum.GET_USER);
    try {
      ps.setString(1, pseudo);
      ResultSet res = ps.executeQuery();
      if (res.next()) {
        System.out.println("Utilisateur trouve !");
        Timestamp date = res.getTimestamp(10);
        TypeUtilisateurEnum type = TypeUtilisateurEnum.valueOf(res.getString(8));
        utilisateur.setId_utilisateur(res.getInt(1));
        utilisateur.setNom(res.getString(2));
        utilisateur.setPrenom(res.getString(3));
        utilisateur.setVille(res.getString(4));
        utilisateur.setEmail(res.getString(5));
        utilisateur.setPseudo(res.getString(6));
        utilisateur.setMot_de_passe(res.getString(7));
        utilisateur.setType(type);
        utilisateur.setDate_inscription(date);
        utilisateur.setId_client(res.getInt(9));

        return utilisateur;
      }

    } catch (SQLException exception) {
      exception.printStackTrace();
      System.out.println("Erreur dans getUtilisateur");
    }
    return null;
  }

  @Override
  public boolean estCompteActivee(String pseudo) {
    checkString(pseudo);

    PreparedStatement ps = dalS.getPreparedStatement(QueryNamesEnum.IS_COMPTE_ACTIVEE);
    try {
      ps.setString(1, pseudo);
      ResultSet res = ps.executeQuery();
      if (res.next()) {
        return true;
      }
    } catch (SQLException sqlException) {
      sqlException.printStackTrace();
    }

    return false;
  }

  @Override
  public boolean deleteUtilisateur(int id) {
    // TODO Auto-generated method stub
    return false;
  }

  @Override
  public boolean updateUtilisateur(UtilisateurDto utilisateur) {
    // TODO Auto-generated method stub
    return false;
  }

  @Override
  public boolean lierCompteUtilisateurClient(int idClient, int utilisateur) {
    // TODO Auto-generated method stub
    return false;
  }

  @Override
  public boolean pseudoEstUnique(String pseudo) {
    checkString(pseudo);
    PreparedStatement ps = dalS.getPreparedStatement(QueryNamesEnum.GET_UNIQUE_PSEUDO);
    try {
      ps.setString(1, pseudo);
      ResultSet res = ps.executeQuery();
      if (res.next()) {
        return false;
      }
    } catch (SQLException sqlException) {
      sqlException.printStackTrace();
    }
    return true;
  }

  @Override
  public boolean emailExistePas(String email) {
    PreparedStatement ps = dalS.getPreparedStatement(QueryNamesEnum.GET_UNIQUE_MAIL);
    try {
      ps.setString(1, email);
      ResultSet res = ps.executeQuery();
      if (res.next()) {
        return false;
      }
    } catch (SQLException sqlException) {
      sqlException.printStackTrace();
    }
    return true;
  }

  @Override
  public UtilisateurDto inscrire(UtilisateurDto utilisateurDto) {
    checkObject(utilisateurDto);
    PreparedStatement ps = dalS.getPreparedStatement(QueryNamesEnum.INSERT_UTILISATEUR);
    try {
      ps.setString(1, utilisateurDto.getNom());
      ps.setString(2, utilisateurDto.getPrenom());
      ps.setString(3, utilisateurDto.getVille());
      ps.setString(4, utilisateurDto.getEmail());
      ps.setString(5, utilisateurDto.getPseudo());
      ps.setString(6, utilisateurDto.getMot_de_passe());
      ps.setString(7, "C");
      ResultSet res = ps.executeQuery();

      // Recupere l id lors de la creation et le renvoie
      if (res.next()) {
        utilisateurDto.setId_utilisateur(res.getInt(1));
      }
    } catch (Exception exception) {
      exception.printStackTrace();
    }
    System.out.println("inscription reussi");
    return utilisateurDto;
  }



}
