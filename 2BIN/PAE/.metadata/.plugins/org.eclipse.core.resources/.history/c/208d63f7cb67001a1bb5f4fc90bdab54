package be.ipl.pae.main.api;

import java.util.List;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import com.owlike.genson.Genson;
import be.ipl.pae.main.biz.dto.DevisDTO;
import be.ipl.pae.main.ucc.DevisUcc;
import be.ipl.pae.main.ucc.UtilisateurUcc;

public class ListeDevisClientServlet extends HttpServlet {
  private DevisUcc devisUcc;
  private UtilisateurUcc utilisateurUcc;


  public ListeDevisClientServlet(DevisUcc devisUcc, UtilisateurUcc utilisateurUcc) {
    this.devisUcc = devisUcc;
    this.utilisateurUcc = utilisateurUcc;
  }

  protected void doGet(HttpServletRequest req, HttpServletResponse resp) {
    System.out.println("Appel au servlet ListeDevisClient");
    try {
      
      // Verification token
      String token = req.getHeader("authorization");
      
      if (!Utils.verifyToken(token)) {
        Utils.replyWithWrongTokenError(resp, token);
        return;
      }
      
      Genson genson = new Genson();

      int idClient = utilisateurUcc.getUtilisateur(req.getParameter("pseudo")).getId_client();
      List<DevisDTO> listeDevisClient = devisUcc.getDevisClient(idClient);

      if (listeDevisClient == null) {
        System.out.println("erreur lors de la recuperation de la liste de devis le servlet");
        resp.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
      } else {
        String json = genson.serialize(listeDevisClient);
        resp.setContentType("application/json");
        resp.setCharacterEncoding("UTF-8");
        resp.setStatus(HttpServletResponse.SC_OK);
        resp.getWriter().write(json);
        System.out.println(json);
      }
    } catch (Exception e) {
      // TODO : si le token est mauvais generer un message d'erreur (mais pas couper le serveur)
      e.printStackTrace();

    }

  }
}
