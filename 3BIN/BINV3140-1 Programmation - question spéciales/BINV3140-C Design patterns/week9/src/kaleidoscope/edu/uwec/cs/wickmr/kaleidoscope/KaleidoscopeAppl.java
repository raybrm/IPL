package edu.uwec.cs.wickmr.kaleidoscope;

import java.awt.*;
import edu.uwec.cs.wickmr.kaleidoscope.scopes.*;
import edu.uwec.cs.wickmr.kaleidoscope.controls.*;
import edu.uwec.cs.wickmr.kaleidoscope.factories.*;
import edu.uwec.cs.wickmr.kaleidoscope.strategies.*;
import edu.uwec.cs.wickmr.kaleidoscope.views.*;

/**
 * This type was generated by a SmartGuide.
 */
@SuppressWarnings("serial")
public class KaleidoscopeAppl extends Frame {

	class IvjEventHandler extends java.awt.event.WindowAdapter {
		public void windowClosing(java.awt.event.WindowEvent e) {
			if (e.getSource() == KaleidoscopeAppl.this)
				connEtoC1(e);
		};

	};

	private Panel ivjContentsPane = null;
	private IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private Panel ivjKaleidoscopeApplPane = null;
	private edu.uwec.cs.wickmr.kaleidoscope.scopes.Kaleidoscope kaleidoscope;
	private edu.uwec.cs.wickmr.kaleidoscope.controls.KaleidoscopeControl kaleidoscopeControl;
	private edu.uwec.cs.wickmr.kaleidoscope.views.KaleidoscopeView kaleidoscopeView;

	/**
	 * KaleidoscopeAppl constructor comment.
	 */
	public KaleidoscopeAppl() {
		initialize();
	}

	/**
	 * KaleidoscopeAppl constructor comment.
	 * 
	 * @param title
	 *            java.lang.String
	 */
	public KaleidoscopeAppl(String title) {
		super(title);
	}

	/**
	 * connEtoC1:
	 * (KaleidoscopeAppl.window.windowClosing(java.awt.event.WindowEvent) -->
	 * KaleidoscopeAppl.dispose()V)
	 * 
	 * @param arg1
	 *            java.awt.event.WindowEvent
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void connEtoC1(java.awt.event.WindowEvent arg1) {
		try {
			// user code begin {1}
			// user code end
			this.dispose();
			// user code begin {2}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {3}
			// user code end
			handleException(ivjExc);
		}
	}

	/**
	 * Return the ContentsPane property value.
	 * 
	 * @return java.awt.Panel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.Panel getContentsPane() {
		if (ivjContentsPane == null) {
			try {
				ivjContentsPane = new java.awt.Panel();
				ivjContentsPane.setName("ContentsPane");
				ivjContentsPane.setLayout(new java.awt.BorderLayout());
				getContentsPane().add(getKaleidoscopeApplPane(), "Center");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjContentsPane;
	}

	/**
	 * Return the KaleidoscopeApplPane property value.
	 * 
	 * @return java.awt.Panel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private java.awt.Panel getKaleidoscopeApplPane() {
		if (ivjKaleidoscopeApplPane == null) {
			try {
				ivjKaleidoscopeApplPane = new java.awt.Panel();
				ivjKaleidoscopeApplPane.setName("KaleidoscopeApplPane");
				ivjKaleidoscopeApplPane.setLayout(new FlowLayout());
				// user code begin {1}
				ivjKaleidoscopeApplPane.add(kaleidoscopeView);
				ivjKaleidoscopeApplPane.add(kaleidoscopeControl);
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjKaleidoscopeApplPane;
	}

	/**
	 * Called whenever the part throws an exception.
	 * 
	 * @param exception
	 *            java.lang.Throwable
	 */
	private void handleException(java.lang.Throwable exception) {

		/* Uncomment the following lines to print uncaught exceptions to stdout */
		// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
		// exception.printStackTrace(System.out);
	}

	/**
	 * Initializes connections
	 * 
	 * @exception java.lang.Exception
	 *                The exception description.
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void initConnections() throws java.lang.Exception {
		// user code begin {1}
		// user code end
		this.addWindowListener(ivjEventHandler);
	}

	/**
	 * Initialize the class.
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void initialize() {
		try {
			// user code begin {1}
			kaleidoscope = new Kaleidoscope(new GeneralShapeFactory(200),
					new GeneralShapeMutationStrategy(200));
			kaleidoscopeControl = new KaleidoscopeControl(kaleidoscope);
			kaleidoscopeView = new FlipKaleidoscopeView(kaleidoscope, 200);

			// add(kalView1);
			// add(kalControl);

			// user code end
			setName("KaleidoscopeAppl");
			setLayout(new java.awt.BorderLayout());
			setSize(300, 300);
			setTitle("KaleidoscopeAppl");
			add(getContentsPane(), "Center");
			initConnections();
		} catch (java.lang.Throwable ivjExc) {
			handleException(ivjExc);
		}
		// user code begin {2}
		// user code end
	}

	/**
	 * Starts the application.
	 * 
	 * @param args
	 *            an array of command-line arguments
	 */
	public static void main(java.lang.String[] args) {
		try {
			/* Create the frame */
			KaleidoscopeAppl aKaleidoscopeAppl = new KaleidoscopeAppl();
			/* Add a windowListener for the windowClosedEvent */
			aKaleidoscopeAppl
					.addWindowListener(new java.awt.event.WindowAdapter() {
						public void windowClosed(java.awt.event.WindowEvent e) {
							System.exit(0);
						};
					});
			aKaleidoscopeAppl.setVisible(true);
		} catch (Throwable exception) {
			System.err
					.println("Exception occurred in main() of KaleidoscopeAppl");
			exception.printStackTrace(System.out);
		}
	}
}
